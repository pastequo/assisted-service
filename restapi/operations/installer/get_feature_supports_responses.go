// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// GetFeatureSupportsOKCode is the HTTP code returned for type GetFeatureSupportsOK
const GetFeatureSupportsOKCode int = 200

/*
GetFeatureSupportsOK Success.

swagger:response getFeatureSupportsOK
*/
type GetFeatureSupportsOK struct {

	/*
	  In: Body
	*/
	Payload models.FeatureSupports `json:"body,omitempty"`
}

// NewGetFeatureSupportsOK creates GetFeatureSupportsOK with default headers values
func NewGetFeatureSupportsOK() *GetFeatureSupportsOK {

	return &GetFeatureSupportsOK{}
}

// WithPayload adds the payload to the get feature supports o k response
func (o *GetFeatureSupportsOK) WithPayload(payload models.FeatureSupports) *GetFeatureSupportsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feature supports o k response
func (o *GetFeatureSupportsOK) SetPayload(payload models.FeatureSupports) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeatureSupportsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.FeatureSupports{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFeatureSupportsBadRequestCode is the HTTP code returned for type GetFeatureSupportsBadRequest
const GetFeatureSupportsBadRequestCode int = 400

/*
GetFeatureSupportsBadRequest Error.

swagger:response getFeatureSupportsBadRequest
*/
type GetFeatureSupportsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeatureSupportsBadRequest creates GetFeatureSupportsBadRequest with default headers values
func NewGetFeatureSupportsBadRequest() *GetFeatureSupportsBadRequest {

	return &GetFeatureSupportsBadRequest{}
}

// WithPayload adds the payload to the get feature supports bad request response
func (o *GetFeatureSupportsBadRequest) WithPayload(payload *models.Error) *GetFeatureSupportsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feature supports bad request response
func (o *GetFeatureSupportsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeatureSupportsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeatureSupportsUnauthorizedCode is the HTTP code returned for type GetFeatureSupportsUnauthorized
const GetFeatureSupportsUnauthorizedCode int = 401

/*
GetFeatureSupportsUnauthorized Unauthorized.

swagger:response getFeatureSupportsUnauthorized
*/
type GetFeatureSupportsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetFeatureSupportsUnauthorized creates GetFeatureSupportsUnauthorized with default headers values
func NewGetFeatureSupportsUnauthorized() *GetFeatureSupportsUnauthorized {

	return &GetFeatureSupportsUnauthorized{}
}

// WithPayload adds the payload to the get feature supports unauthorized response
func (o *GetFeatureSupportsUnauthorized) WithPayload(payload *models.InfraError) *GetFeatureSupportsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feature supports unauthorized response
func (o *GetFeatureSupportsUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeatureSupportsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeatureSupportsForbiddenCode is the HTTP code returned for type GetFeatureSupportsForbidden
const GetFeatureSupportsForbiddenCode int = 403

/*
GetFeatureSupportsForbidden Forbidden.

swagger:response getFeatureSupportsForbidden
*/
type GetFeatureSupportsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewGetFeatureSupportsForbidden creates GetFeatureSupportsForbidden with default headers values
func NewGetFeatureSupportsForbidden() *GetFeatureSupportsForbidden {

	return &GetFeatureSupportsForbidden{}
}

// WithPayload adds the payload to the get feature supports forbidden response
func (o *GetFeatureSupportsForbidden) WithPayload(payload *models.InfraError) *GetFeatureSupportsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feature supports forbidden response
func (o *GetFeatureSupportsForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeatureSupportsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeatureSupportsNotFoundCode is the HTTP code returned for type GetFeatureSupportsNotFound
const GetFeatureSupportsNotFoundCode int = 404

/*
GetFeatureSupportsNotFound Error.

swagger:response getFeatureSupportsNotFound
*/
type GetFeatureSupportsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeatureSupportsNotFound creates GetFeatureSupportsNotFound with default headers values
func NewGetFeatureSupportsNotFound() *GetFeatureSupportsNotFound {

	return &GetFeatureSupportsNotFound{}
}

// WithPayload adds the payload to the get feature supports not found response
func (o *GetFeatureSupportsNotFound) WithPayload(payload *models.Error) *GetFeatureSupportsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feature supports not found response
func (o *GetFeatureSupportsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeatureSupportsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeatureSupportsServiceUnavailableCode is the HTTP code returned for type GetFeatureSupportsServiceUnavailable
const GetFeatureSupportsServiceUnavailableCode int = 503

/*
GetFeatureSupportsServiceUnavailable Unavailable.

swagger:response getFeatureSupportsServiceUnavailable
*/
type GetFeatureSupportsServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeatureSupportsServiceUnavailable creates GetFeatureSupportsServiceUnavailable with default headers values
func NewGetFeatureSupportsServiceUnavailable() *GetFeatureSupportsServiceUnavailable {

	return &GetFeatureSupportsServiceUnavailable{}
}

// WithPayload adds the payload to the get feature supports service unavailable response
func (o *GetFeatureSupportsServiceUnavailable) WithPayload(payload *models.Error) *GetFeatureSupportsServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get feature supports service unavailable response
func (o *GetFeatureSupportsServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeatureSupportsServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
